#version 460
#extension GL_NV_ray_tracing : enable

#include "Common.glsl"

layout(location = 0) rayPayloadNV DefaultPayload payload;

void main()
{
	ivec2 pixelIndex = ivec2(gl_LaunchIDNV.xy);
	vec2 pixelPos = vec2(pixelIndex)/vec2(outputSize);

	uint rayFlags = gl_RayFlagsOpaqueNV;

	payload.color = vec3(0,0,0);
	payload.hitT = 0;

	RayDesc ray;
	ray.origin = vec3((pixelPos-0.5) * vec2(2,-2), 0);
	ray.direction = vec3(0,0,1);
	ray.minT = 0;
	ray.maxT = 1e9;

	traceNV(TLAS,
		rayFlags,		// uint rayFlags
		~0u, 			// uint cullMask
		0u,	 			// uint sbtRecordOffset
		0u, 			// uint sbtRecordStride
		0u,				// uint missIndex
		ray.origin,		// vec3 origin
		ray.minT,	    // float Tmin
		ray.direction,  // vec3 direction
		ray.maxT,		// float Tmax
		0				// int payload
	);

	vec4 result = vec4(pixelPos, 0, 1);

	if (payload.hitT >= 0)
	{
		result.rgb = payload.color;
	}
	else
	{
		result.rgb *= 0.25;
	}

	imageStore(outputImage, pixelIndex, result);
}
